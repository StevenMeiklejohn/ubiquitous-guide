{"version":3,"sources":["webpack:///webpack/bootstrap c8eb9925a3dfc2cb5dcf","webpack:///./src/index.js","webpack:///./src/bank/bank.js","webpack:///./src/bank/account.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC1EA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;;;AAGA;;;;;;;ACvCA;AACA;AACA;AACA;AACA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c8eb9925a3dfc2cb5dcf\n **/","var Bank = require('./bank/bank.js');\nvar Account = require('./bank/account.js');\nvar url = 'http://localhost:3000/accounts';\n\nvar createItemForAccount = function(account){\n  var accountListItem = document.createElement('li');\n  accountListItem.innerText = account.owner + \": £\" + account.amount;\n  return accountListItem;\n}\n\nvar populateAccountList = function(listElement, accounts){\n  for(account of accounts){\n    listElement.appendChild(createItemForAccount(account));\n  }\n}\n\nvar displayBank = function(bank){\n  var totalDisplay = document.getElementById('total');\n  var businessTotalDisplay = document.getElementById('business-total');\n  var personalTotalDisplay = document.getElementById('personal-total');\n\n  totalDisplay.innerText = \"Total: £\" + bank.totalCash();\n  businessTotalDisplay.innerText = \"Total Business: £\" + bank.totalCash('business');\n  personalTotalDisplay.innerText = \"Total Personal: £\" + bank.totalCash('personal');\n\n  var businessAccountList = document.getElementById('business-accounts');\n  var personalAccountList = document.getElementById('personal-accounts');\n\n  businessAccountList.innerHTML = \"\"\n  personalAccountList.innerHTML = \"\"\n\n  populateAccountList(businessAccountList, bank.filteredAccounts('business'))\n  populateAccountList(personalAccountList, bank.filteredAccounts('personal'))\n}\n\nwindow.onload = function(){\n  var bank = new Bank();\n\n  var request = new XMLHttpRequest();\n  request.open(\"GET\", url);\n  request.onload = function(){\n    if(request.status === 200){\n      console.log('got the data');\n      console.log(request.responseText);\n      var sampleAccounts = JSON.parse(request.responseText)\n      for(account of sampleAccounts){\n        bank.addAccount(new Account(account));\n      }\n      displayBank(bank)\n    }\n  }\n  request.send(null);\n\n  var form = document.querySelector(\"#add-account\")\n  form.onsubmit = function(e){\n    e.preventDefault();\n    var account = {\n      owner: document.querySelector(\"#owner\").value,\n      amount: parseInt(document.querySelector(\"#amount\").value),\n      type: document.querySelector(\"#type\").value\n    }\n    bank.addAccount(new Account(account));\n    displayBank(bank);\n\n    //persist change\n    var request = new XMLHttpRequest();\n    request.open(\"POST\", url);\n    request.setRequestHeader(\"Content-Type\", \"application/json\");\n    request.onload = function(){\n      if(request.status === 200){\n      }\n    }\n    request.send(JSON.stringify(account));\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","var Bank = function(){\n  this.accounts = [];\n}\n\nBank.prototype = {\n  addAccount: function(account){\n    this.accounts.push(account);\n  },\n  findAccountByOwnerName:function(ownerName){\n    var foundAccount = null;\n    for (account of this.accounts) {\n      if(account.owner === ownerName){\n        foundAccount = account;\n      }\n    }\n    return foundAccount;\n  },\n  filteredAccounts: function(type){\n    if(!type) return this.accounts\n    var filteredAccounts = [];\n    for (account of this.accounts) {\n      if(type === account.type)\n        filteredAccounts.push(account);\n    }\n    return filteredAccounts;\n  },\n  totalCash:function(type){\n    var total = 0;\n    for (account of this.filteredAccounts(type)) {\n      total += account.amount;\n    }\n    return total;\n  },\n  accountAverage:function(){\n    return this.totalCash()/this.accounts.length;\n  }\n}\n\n\nmodule.exports = Bank;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/bank/bank.js\n ** module id = 1\n ** module chunks = 0\n **/","var Account = function(params){\n  this.owner = params.owner;\n  this.amount = params.amount;\n  this.type = params.type;\n};\n\nmodule.exports = Account;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/bank/account.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}